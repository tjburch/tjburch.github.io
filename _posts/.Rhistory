append(1:5, 0:1, after = 3)
x <- 0
append(x, 1)
append(x, 2)
knitr::opts_chunk$set(echo = TRUE)
x<-0
for (i in 1:10){
append(x, (1-i)^i)
}
x
x<-0
for (i in 1:10){
print((1-i)^i)
append(x, (1-i)^i)
}
x<-0
for (i in 1:10){
print((1-0.89)^i)
append(x, (1-i)^i)
}
x<-0
for (i in 1:6){
append(x, (1-89)^i)
}
x
x<-0
for (i in 1:6){
x<-append(x, (1-89)^i)
}
x
x<-0
for (i in 1:6){
x<-append(x, (1-0.89)^i)
}
x
x<-1
for (i in 1:6){
x<-append(x, (1-0.89)^i)
}
x
x<-1
for (i in 1:6){
x<-append(x, (1-0.89)^i)
}
x
x<-1
for (i in 1:6){
x<-append(x,(1-0.89)^i)
print(x)
}
y<-1
for (i in 1:6){
y<-append(x,(1-0.89)^i)
}
plot(0:6, x)
y<-1
for (i in 1:6){
y<-append(x,(1-0.89)^i)
}
plot(0:6, x, col=rangi2)
y<-1
for (i in 1:6){
y<-append(x,(1-0.89)^i)
}
plot(0:6, x, col="cornflowerblue")
y<-1
for (i in 1:6){
y<-append(x,(1-0.89)^i)
}
plot(0:6, x, col="firebrick")
y<-1
for (i in 1:6){
y<-append(x,(1-0.89)^i)
}
plot(0:6, x, col="firebrick",
xlab="Shot Number", ylab="Percent of Total Distance Remaining" )
apply(1:6, {function (i) (1-0.89)^i})
apply(1:6, 1, {function (i) (1-0.89)^i})
lapply(1:6, {function (i) (1-0.89)^i})
lapply(0:6, {function (i) (1-0.89)^i})
y<-lapply(0:6, {function (i) (1-0.89)^i})
plot(0:6, x, col="firebrick",
xlab="Shot Number", ylab="Percent of Total Distance Remaining" )
0:1:0.05
#y<-lapply(0:6, {function (i) (1-0.89)^i})
#lapply(0:6, {function (i) (1-0.89)^i})
print(0:1:0.05)
#y<-lapply(0:6, {function (i) (1-0.89)^i})
#lapply(0:6, {function (i) (1-0.89)^i})
lapply(seq(0.05,0.95,0.05), {function (x) (
ln(14400/2.125)/ln(1-x)
) }
lapply(seq(0.05,0.95,0.05), {function (x) (ln(14400/2.125)/ln(1-x)) }
lapply(seq(0.05,0.95,0.05), {function (x) (ln(14400/2.125)/ln(1-x)) })
lapply(seq(0.05,0.95,0.05), {function (x) (log(14400/2.125)/log(1-x)) })
lapply(seq(0.05,0.95,0.05), {function (x) (log(2.125/14400)/log(1-x)) })
x <- 0:6
y<-lapply(x, {function (i) (1-0.89)^i})
plot(x, y, col="firebrick",
xlab="Shot Number", ylab="Percent of Total Distance Remaining" )
x <- seq(0.05,0.95,0.05)
y <- lapply(x, {function (x) (ceil(log(2.125/14400)/log(1-x))) })
x <- seq(0.05,0.95,0.05)
y <- lapply(x, {function (x) (ceiling(log(2.125/14400)/log(1-x))) })
plot(x, y, col="firebrick",
xlab="Percent Distance Covered per Shot", ylab="Shots Needed to Reach Hole" )
